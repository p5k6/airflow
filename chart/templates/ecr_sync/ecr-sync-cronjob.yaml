################################
## Airflow ECR Sync CronJob
#################################
{{- if .Values.ecrsync.enabled }}
{{- $nodeSelector := or .Values.ecrsync.nodeSelector .Values.nodeSelector }}
{{- $affinity := or .Values.ecrsync.affinity .Values.affinity }}
{{- $tolerations := or .Values.ecrsync.tolerations .Values.tolerations }}
{{- $securityContext := include "airflowSecurityContext" (list . .Values.ecrsync) }}
{{- if semverCompare ">= 1.21.x" (include "kubeVersion" .) }}
apiVersion: batch/v1
{{- else }}
apiVersion: batch/v1beta1
{{- end }}
kind: CronJob
metadata:
  name: {{ .Release.Name }}-ecrsync
  labels:
    tier: airflow
    component: airflow-ecrsync-pods
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
{{- with .Values.labels }}
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  schedule: "{{ .Values.ecrsync.schedule }}"
  # The cron job does not allow concurrent runs; if it is time for a new job run and the previous job run hasnâ€™t finished yet, the cron job skips the new job run
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 1
      template:
        metadata:
          labels:
            tier: airflow
            component: airflow-ecrsync-pods
            release: {{ .Release.Name }}
{{- with .Values.labels }}
{{ toYaml . | indent 12 }}
{{- end }}
          annotations:
            sidecar.istio.io/inject: "false"
            {{- if .Values.airflowPodAnnotations }}
            {{- toYaml .Values.airflowPodAnnotations | nindent 12 }}
            {{- end }}
            {{- if .Values.ecrsync.podAnnotations }}
            {{- toYaml .Values.ecrsync.podAnnotations | nindent 12 }}
            {{- end }}
        spec:
          restartPolicy: Never
          nodeSelector:
{{ toYaml $nodeSelector | indent 12 }}
          affinity:
{{ toYaml $affinity | indent 12 }}
          tolerations:
{{ toYaml $tolerations | indent 12 }}
          serviceAccountName: {{ include "ecrsync.serviceAccountName" . }}
          {{- if or .Values.registry.secretName .Values.registry.connection }}
          imagePullSecrets:
            - name: {{ template "registry_secret" . }}
          {{- end }}
          securityContext: {{ $securityContext | nindent 12 }}
          containers:
            - name: airflow-ecrsync-pods
              image: {{ template "airflow_image" . }}
              imagePullPolicy: {{ .Values.images.airflow.pullPolicy }}
              {{- if .Values.ecrsync.command }}
              command: {{ tpl (toYaml .Values.ecrsync.command) . | nindent 16 }}
              {{- end }}
              {{- if .Values.ecrsync.args }}
              args: {{ tpl (toYaml .Values.ecrsync.args) . | nindent 16 }}
              {{- end }}
              env:
              {{- include "standard_airflow_environment" . | indent 12 }}
              volumeMounts:
                - name: ecrsync_cronjob
                  mountPath: {{ .Values.ecrsync.cronjobPath | quote }}
                  subPath: "ecrsync.py"
                  readOnly: true
              resources:
{{ toYaml .Values.ecrsync.resources | indent 16 }}
          volumes:
            - name: config
              configMap:
                name: {{ template "airflow_config" . }}
{{- end }}
